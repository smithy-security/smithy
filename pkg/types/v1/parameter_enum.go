// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package v1

import (
	"errors"
	"fmt"
)

const (
	// ParameterTypeString is a ParameterType of type string.
	ParameterTypeString ParameterType = "string"
	// ParameterTypeConstString is a ParameterType of type const_string.
	ParameterTypeConstString ParameterType = "const:string"
	// ParameterTypeListString is a ParameterType of type list_string.
	ParameterTypeListString ParameterType = "list:string"
)

var ErrInvalidParameterType = errors.New("not a valid ParameterType")

// String implements the Stringer interface.
func (x ParameterType) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x ParameterType) IsValid() bool {
	_, err := ParseParameterType(string(x))
	return err == nil
}

var _ParameterTypeValue = map[string]ParameterType{
	"string":       ParameterTypeString,
	"const:string": ParameterTypeConstString,
	"list:string":  ParameterTypeListString,
}

// ParseParameterType attempts to convert a string to a ParameterType.
func ParseParameterType(name string) (ParameterType, error) {
	if x, ok := _ParameterTypeValue[name]; ok {
		return x, nil
	}
	return ParameterType(""), fmt.Errorf("%s is %w", name, ErrInvalidParameterType)
}
