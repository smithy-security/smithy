---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: producer-snyk-node
  labels:
    v1.smithy.smithy-security.com/component: producer
    v1.smithy.smithy-security.com/test-type: sast
    v1.smithy.smithy-security.com/language: docpythoner
spec:
  params:
  - name: producer-snyk-node-api-key
    type: string
  - name: producer-snyk-node-directories
    type: array
    default:
    - .
  description: Run Snyk For Javascript, Typescript, Node
  steps:
  - name: run-snyk
    imagePullPolicy: IfNotPresent
    env:
      - name: SNYK_INTEGRATION_VERSION 
        value: docker
    image: snyk/snyk:node
    script: |
      #!/usr/bin/env bash
      set -ex

      echo "authenticating to snyk"
      snyk auth $(params.producer-snyk-node-api-key)


      echo "Finding a file name `package.json` that is not in node_modules"
      pkg=$( find $(workspaces.source-code.path) -name package.json -not -path "*/node_modules/*" | awk '{print length, $0}' | sort -n | head -n 1 | cut -d' ' -f2-)
      echo "file package.json found in $(dirname $pkg)"

      cd $(dirname $pkg)

      if [ -e yarn.lock ]
      then
        yarn install
      else
        npm install
        exitCode=$?
      fi

      echo "running snyk test"
      snyk test --prune-repeated-subdependencies --skip-unresolved --sarif-file-output=$(workspaces.scratch.path)/snyk.out .
      exitCode=$?
      if [[ ${exitCode} -ne 0 && ${exitCode} -ne 1 ]]
      then
        echo "Snyk failed with exit code ${exitCode}"
        exit ${exitCode}
      else
        echo "Snyk completed successfully! exitcode ${exitCode}"
      fi
      
  - name: produce-issues
    imagePullPolicy: IfNotPresent
    image: '{{ default "ghcr.io/smithy-security/smithy" .Values.image.registry }}/components/producers/snyk-docker:{{ .Chart.AppVersion }}'
    command: ["/app/components/producers/snyk-docker/snyk-docker-parser"]
    args:
    - "-in=$(workspaces.scratch.path)/snyk.out"
    - "-out=$(workspaces.scratch.path)/snyk.pb"
    - "-language=javascript"
