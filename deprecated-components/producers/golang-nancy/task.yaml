---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: producer-golang-nancy
  labels:
    v1.smithy.smithy-security.com/component: producer
    v1.smithy.smithy-security.com/test-type: sca
    v1.smithy.smithy-security.com/language: golang
spec:
  description: Dependency scanner for Golang projects.
  params:
    - name: producer-golang-nancy-goImage
      type: string
      default: "docker.io/golang:1.21"
      description: The container image that will be used to run Go nancy
  steps:
    - name: go-deps
      image: "$(params.producer-golang-nancy-goImage)"
      script: | # necessary because sonatypecommunity/nancy does not include go
        #!/bin/bash -xe
        # make sure that the git repo is considered secure since it's mounted with onwen None but the process itself runs as root
        git config --global --add safe.directory $(workspaces.source-code.path)
        if [[ ! -f "$(workspaces.source-code.path)/Gopkg.lock" ]]; then
           go_mod_paths=$(find $(workspaces.source-code.path) -iname "go.mod")
           touch $(workspaces.scratch.path)/golist.json
           for go_mod_path in $go_mod_paths; do
             cd $(dirname $go_mod_path) && go list -json -deps ./... >> $(workspaces.scratch.path)/golist.json
           done
           cat $(workspaces.scratch.path)/golist.json
         else
           cat $(workspaces.source-code.path)/Gopkg.lock
         fi

         ls -lah $(workspaces.scratch.path)
    - name: run-nancy
      imagePullPolicy: IfNotPresent
      image: docker.io/sonatypecommunity/nancy:v1.0.42-alpine
      script: |
        #!/bin/sh
        if [[ ! -f "$(workspaces.source-code.path)/Gopkg.lock" ]]; then
          echo "Running nancy with golist"
          cat $(workspaces.scratch.path)/golist.json | nancy sleuth -o json > $(workspaces.scratch.path)/out.json || true
        else
          echo "Running nancy in dep mode"
          nancy sleuth -p "$(workspaces.source-code.path)/Gopkg.lock" -o json > $(workspaces.scratch.path)/out.json || true
        fi
        cat $(workspaces.scratch.path)/out.json
    - name: produce-issues
      imagePullPolicy: IfNotPresent
      image: '{{ default "ghcr.io/smithy-security/smithy" .Values.image.registry }}/components/producers/golang-nancy:{{ .Chart.AppVersion }}'
      command: ["/app/components/producers/golang-nancy/golang-nancy-parser"]
      args:
        - "-in=$(workspaces.scratch.path)/out.json"
        - "-out=$(workspaces.scratch.path)/golang-nancy.pb"
