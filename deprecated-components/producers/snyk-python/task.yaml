---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: producer-snyk-python
  labels:
    v1.smithy.smithy-security.com/component: producer
    v1.smithy.smithy-security.com/test-type: sast
    v1.smithy.smithy-security.com/language: docpythoner
spec:
  params:
  - name: producer-snyk-python-api-key
    type: string
  - name: producer-snyk-python-relative-path-to-requirements-txt
    type: string
    default: ""
  description: Run Snyk For python
  volumes:
    - name: scratch
      emptyDir: {}
  workspaces:
    - name: output
      description: The workspace containing the source-code to scan.
  steps:
  - name: run-snyk
    imagePullPolicy: IfNotPresent
    env:
      - name: SNYK_INTEGRATION_VERSION 
        value: docker

    image: 'snyk/snyk:python'
    script: |
      #!/usr/bin/env bash
      set -x
      set +e
      echo "authenticating to snyk"
      snyk auth $(params.producer-snyk-python-api-key)
      if [[ -n "$(params.producer-snyk-python-relative-path-to-requirements-txt)" ]]; then
        echo "installing dependencies"
        pip install --force --no-deps --no-compile --no-warn-conflicts -r "$(workspaces.source-code.path)/$(params.producer-snyk-python-relative-path-to-requirements-txt)"
      fi

      echo "running snyk test"
      ls -lah $(workspaces.source-code.path)/
      snyk test --prune-repeated-subdependencies --skip-unresolved --sarif-file-output=$(workspaces.scratch.path)/snyk.out $(workspaces.source-code.path)/
      exitCode=$?
      if [[ $exitCode -ne 0 && $exitCode -ne 1 ]]; then
        echo "Snyk failed with exit code $exitCode"
        exit $exitCode
      else
        echo "Snyk completed successfully! exitcode $exitCode"
      fi
  - name: produce-issues
    imagePullPolicy: IfNotPresent
    image: '{{ default "ghcr.io/smithy-security/smithy" .Values.image.registry }}/components/producers/snyk-docker:{{ .Chart.AppVersion }}'
    command: ["/app/components/producers/snyk-docker/snyk-docker-parser"]
    args:
    - "-in=$(workspaces.scratch.path)/snyk.out"
    - "-out=$(workspaces.scratch.path)/snyk.pb"
    - "-language=python"
