package testing

import (
	"testing"

	"github.com/smithy-security/pkg/utils"

	ocsf "github.com/smithy-security/smithy/sdk/gen/ocsf_schema/v1"
)

// TestCompareVulnerabilityFindings now sets up data and calls the assertion helper.
func TestCompareVulnerabilityFindings(t *testing.T) {
	//repoDataSource := `{"targetType": 1, "uri": {"path": "file://user.go"}, "fileFindingLocationData": {"startLine": 50, "endLine": 55}, "sourceCodeMetadata": {"repositoryUrl": "https://github.com/my-org/my-repo", "reference": "refs/heads/main"}}`
	containerDataSource := `{"targetType": 2, "uri": {"path": "pkg:docker/my-app@sha256:f1..."}, "fileFindingLocationData": {"startLine": 1, "endLine": 1}, "ociPackageMetadata": {"packageUrl": "my-registry/my-app", "tag": "1.2.3"}}`
	//websiteDataSource := `{"targetType": 3, "uri": {"path": "https://example.com/login"}, "fileFindingLocationData": {"startLine": 25, "endLine": 30}, "websiteMetadata": {"url": "https://example.com/login"}}`

	expectedFindings := []*ocsf.VulnerabilityFinding{
		{
			FindingInfo: &ocsf.FindingInfo{Uid: "G102", Title: "Outdated Container", DataSources: []string{containerDataSource}},
			Vulnerabilities: []*ocsf.Vulnerability{{
				// Cve: &ocsf.Cve{Uid: "2023-1234"},
				AffectedCode: []*ocsf.AffectedCode{{File: &ocsf.File{Name: "pkg:docker/my-app@sha256:f1..."}, StartLine: utils.Ptr(int32(1))}},
			}},
		},
	}

	actualFindings := []*ocsf.VulnerabilityFinding{
		{ // Matches G102 perfectly
			FindingInfo: &ocsf.FindingInfo{Uid: "G102", Title: "Outdated Container", DataSources: []string{containerDataSource}},
			Vulnerabilities: []*ocsf.Vulnerability{{
				// Cve: &ocsf.Cve{Uid: "2023-1234"},
				AffectedCode: []*ocsf.AffectedCode{{File: &ocsf.File{Name: "pkg:docker/my-app@sha256:f1..."}, StartLine: utils.Ptr(int32(1))}},
			}},
		},
	}

	AssertFindingListsMatch(t, expectedFindings, actualFindings)
}

// Example usage of the new assertion helper function
func TestVulnerabilityFindingValidation(t *testing.T) {
	// A valid finding that should pass all assertions
	validFinding := &ocsf.VulnerabilityFinding{
		FindingInfo: &ocsf.FindingInfo{
			Uid:   "G112",
			Title: "Uncontrolled Resource Consumption",
			// --- CORRECTED: JSON string is now a single object, not an array ---
			DataSources: []string{`{
				"targetType": 1,
				"uri": {"path": "file://src/main.go"},
				"fileFindingLocationData": {"startLine": 10, "endLine": 15},
				"sourceCodeMetadata": {"repositoryUrl": "https://github.com/my-org/my-repo", "reference": "refs/heads/main"}
			}`},
		},
		Vulnerabilities: []*ocsf.Vulnerability{
			{
				Cwe: &ocsf.Cwe{Uid: "400"},
				AffectedCode: []*ocsf.AffectedCode{{
					File:      &ocsf.File{Name: "src/main.go"},
					StartLine: utils.Ptr(int32(10)),
					EndLine:   utils.Ptr(int32(15)),
				}},
			},
		},
	}

	t.Run("Valid Finding", func(t *testing.T) {
		AssertVulnerabilityFindingIsValid(t, validFinding)
	})

}
