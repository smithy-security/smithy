---
runner:
  go/vet:
    cmd: make --quiet go-lint-vet
    format: govet

  go/staticcheck:
    cmd: make --quiet go-lint-staticcheck
    format: staticcheck

  go/revive:
    cmd: make --quiet go-lint-revive
    errorformat:
      - '%f:%l:%c: %m'
 
  go/containedctx:
    cmd: make --quiet go-lint-containedctx
    errorformat:
      - '%f:%l:%c: %m'

  go/ineffassign:
    cmd: make --quiet go-lint-ineffassign
    errorformat:
      - '%f:%l:%c: %m'

  go/errorlint:
    cmd:  make --quiet go-lint-errorlint
    errorformat:
      - '%f:%l:%c: %m'

  go/errcheck:
    cmd: make --quiet go-lint-errchecks
    errorformat:
      - '%f:%l:%c:%m'

  npm/remark:
    ###################### Removes ansi codes see https://github.com/reviewdog/errorformat/issues/51
    cmd: npm run lint | sed 's/\x1b\[[0-9;]*m//g'
    format: remark-lint

  misspell:
    cmd: git ls-files | grep -v '.lock' | grep -v vendor | grep -v gen | grep -v testdata | xargs misspell -- -error -locale UK -i "color"
    errorformat:
      - '%E%f:%l:%c: %m'
    level: info

  black:
    cmd: poetry --directory sdk/python run -- black --check .
    format: black

  # TODO: figure out how to set errorformat to parse the error output
  # actionlint:
  #   cmd: actionlint
  #   errorformat:
  #     - 

  # TODO(OCU-130): Enable buf-lint again
  # buf_lint:
  #   cmd: buf lint . --path ./api/
  #   level: error
  #   format: buf
